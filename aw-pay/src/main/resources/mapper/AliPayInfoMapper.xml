<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foochane.awpay.dao.mapper.AliPayInfoMapper">
  <resultMap id="BaseResultMap" type="com.foochane.awpay.dao.entity.AliPayInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="merchant_private_key" jdbcType="VARCHAR" property="merchantPrivateKey" />
    <result column="alipay_public_key" jdbcType="VARCHAR" property="alipayPublicKey" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="return_url" jdbcType="VARCHAR" property="returnUrl" />
    <result column="is_sandbox" jdbcType="TINYINT" property="isSandbox" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_channel, app_id, merchant_private_key, alipay_public_key, notify_url, return_url, 
    is_sandbox, remark, status, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.foochane.awpay.dao.entity.AliPayInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ali_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ali_pay_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ali_pay_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.foochane.awpay.dao.entity.AliPayInfoExample">
    delete from ali_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.foochane.awpay.dao.entity.AliPayInfo">
    insert into ali_pay_info (id, pay_channel, app_id, 
      merchant_private_key, alipay_public_key, notify_url, 
      return_url, is_sandbox, remark, 
      status, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=INTEGER}, #{payChannel,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{merchantPrivateKey,jdbcType=VARCHAR}, #{alipayPublicKey,jdbcType=VARCHAR}, #{notifyUrl,jdbcType=VARCHAR}, 
      #{returnUrl,jdbcType=VARCHAR}, #{isSandbox,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.foochane.awpay.dao.entity.AliPayInfo">
    insert into ali_pay_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payChannel != null">
        pay_channel,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="merchantPrivateKey != null">
        merchant_private_key,
      </if>
      <if test="alipayPublicKey != null">
        alipay_public_key,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="returnUrl != null">
        return_url,
      </if>
      <if test="isSandbox != null">
        is_sandbox,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="merchantPrivateKey != null">
        #{merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="alipayPublicKey != null">
        #{alipayPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="returnUrl != null">
        #{returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="isSandbox != null">
        #{isSandbox,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.foochane.awpay.dao.entity.AliPayInfoExample" resultType="java.lang.Long">
    select count(*) from ali_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ali_pay_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantPrivateKey != null">
        merchant_private_key = #{record.merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.alipayPublicKey != null">
        alipay_public_key = #{record.alipayPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyUrl != null">
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.returnUrl != null">
        return_url = #{record.returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isSandbox != null">
        is_sandbox = #{record.isSandbox,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ali_pay_info
    set id = #{record.id,jdbcType=INTEGER},
      pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      merchant_private_key = #{record.merchantPrivateKey,jdbcType=VARCHAR},
      alipay_public_key = #{record.alipayPublicKey,jdbcType=VARCHAR},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      return_url = #{record.returnUrl,jdbcType=VARCHAR},
      is_sandbox = #{record.isSandbox,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.foochane.awpay.dao.entity.AliPayInfo">
    update ali_pay_info
    <set>
      <if test="payChannel != null">
        pay_channel = #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="merchantPrivateKey != null">
        merchant_private_key = #{merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="alipayPublicKey != null">
        alipay_public_key = #{alipayPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="returnUrl != null">
        return_url = #{returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="isSandbox != null">
        is_sandbox = #{isSandbox,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.foochane.awpay.dao.entity.AliPayInfo">
    update ali_pay_info
    set pay_channel = #{payChannel,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      merchant_private_key = #{merchantPrivateKey,jdbcType=VARCHAR},
      alipay_public_key = #{alipayPublicKey,jdbcType=VARCHAR},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      return_url = #{returnUrl,jdbcType=VARCHAR},
      is_sandbox = #{isSandbox,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>